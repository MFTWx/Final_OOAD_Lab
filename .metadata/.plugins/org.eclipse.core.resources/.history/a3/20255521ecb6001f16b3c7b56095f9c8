package controller;

import model.User;

public class UserController {
	
	private static UserController uc = null;
	private User userModel;
	
	private UserController() {
		userModel = new User();
	}
	
	public static UserController getInstance() {
		if(uc == null) {
			uc = new UserController();
		}
		return uc;
	}
	
	public boolean Login(String Username, String Password) {
		return true;
	}
	
	public void Register(String Username, String Password, String Phone_number, String Address, String Role) {
		
		boolean validated = CheckAccountValidation(Username, Password, Phone_number, Address);
		
		if(validated) {
			String id = "id_" + System.currentTimeMillis();
						
			boolean result = userModel.createUser(id, Username, Password, Phone_number, Address, Role);
			if (result) {
			    System.out.println("User created successfully!");
			} else {
			    System.out.println("Failed to create user.");
			}
		} else {
			System.out.println("not validated");
		}
	}
	
	public boolean CheckAccountValidation(String Username, String Password, String Phone_number, String Address) {
		if(Username.isEmpty() || Username.length() < 3) {
			for(String username : userModel.getAllUsername()) {
				if(Username == username) {
					return false;
				} else {
					continue;
				}
			}
			return false;
		} else if(Password.isEmpty() || Password.length() < 8 || !Password.matches(".*[!@#$%^&*].*") ) {
			return false;
		} else if(Phone_number.isEmpty() || !Phone_number.startsWith("+62") || Phone_number.length() != 12) {
	        return false;
	    } else if(Address.isEmpty()) {
			return false;
		} else {
			return true;
		}
	}
	
}
